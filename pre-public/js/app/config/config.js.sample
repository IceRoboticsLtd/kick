/*
 * Config
 */
define(['./Base'], function (Base) {
    console.log('CORE: config called');
    var configs = {
		app_list: {
			'calculator': {
				views: {
					calculator: {
						result: 0,
						htmlSource: '<div id="#header" style="font-family: Tahoma, sans-serif;font-size: 3.0em;"><span class="title first">Your</span>&nbsp;<span class="title second">Company<span class="separator"/><span class="subtitle">Calculator</span></div><div id="wrapper"><div id="content"><ul id="listdisplay" class="clearfix"><li class="clearfix"><form class="calc"><p class="calc-display"><input type="text" name="res" id="res" value="" class="calc-display-input" onfocus="this.blur()"></p><p class="calc-row"><button type="button" class="calc-button calc-button-gray" onclick="s(\'Just....\')">mrc</button><button type="button" class="calc-button calc-button-gray" onclick="s(\'....do..\')">m-</button><button type="button" class="calc-button calc-button-gray" onclick="s(\'......it\')">m+</button><button type="button" class="calc-button calc-button-red calc-button-big" onclick="a(\'/\')">รท</button></p><p class="calc-row"><button type="button" class="calc-button" onclick="a(\'7\')">7</button><button type="button" class="calc-button" onclick="a(\'8\')">8</button><button type="button" class="calc-button" onclick="a(\'9\')">9</button><button type="button" class="calc-button calc-button-red calc-button-big" onclick="a(\'*\')">x</button></p><p class="calc-row"><button type="button" class="calc-button" onclick="a(\'4\')">4</button><button type="button" class="calc-button" onclick="a(\'5\')">5</button><button type="button" class="calc-button" onclick="a(\'6\')">6</button><button type="button" class="calc-button calc-button-red calc-button-big" onclick="a(\'-\')">-</button></p><p class="calc-row"><button type="button" class="calc-button" onclick="a(\'1\')">1</button><button type="button" class="calc-button" onclick="a(\'2\')">2</button><button type="button" class="calc-button" onclick="a(\'3\')">3</button><button type="button" class="calc-button calc-button-red calc-button-big" onclick="a(\'+\')">+</button></p><p class="calc-row"><button type="button" class="calc-button" onclick="a(\'0\')">0</button><button type="button" class="calc-button" onclick="a(\'.\')">.</button><button type="button" class="calc-button" onclick="s(\'\')">C</button><button type="button" class="calc-button calc-button-yellow calc-button-big" onclick="e()">=</button></p></form></li></ul></div></div>',
						scriptSource: 'js/views/calculator/calculator.js',
						subscriptions: [
							{
								channel: 'calculator',
								topic: 'doneCalculate'
							}
						]
					}
				},
				models: {
					individual: {
						someKey: 'someValue',
						subscriptions: [
							{
								channel: 'calculator',
								topic: 'doCalculate'
							}
						]
					}
				}
			},
			'slider': {
				views: {
					slideOne: {
						htmlSource: '<span>Slide One</span><img src="http://localhost:2000/themes/mydefaulttheme/img/deal.png" />',
						scriptSource: 'js/slider/views/slideOne/slideOne.js',
						subscriptions: [
							{
								channel: 'slideshow',
								topic: 'doneSlide'
							}
						]
					},
					slideTwo: {
						htmlSource: '<span>Slide Two</span>',
						scriptSource: 'js/slider/views/slideTwo/slideTwo.js',
						subscriptions: [
							{
								channel: 'slider',
								topic: 'doneSlide'
							}
						]
					},
					slideThree: {
						htmlSource: '<span>Slide Three</span>',
						scriptSource: 'js/slider/views/slideThree/slideThree.js',
						subscriptions: [
							{
								channel: 'slider',
								topic: 'doneSlide'
							}
						]
					}
				},
				models: {
					individual: {
						someKey: 'someValue',
						scriptSource: 'js/slider/models/individual/individual.js',
						subscriptions: [
							{
								channel: 'slider',
								topic: 'doSlide'
							}
						]
					}
				}
			},
			'todo': {
				views: {
					todo: {
						htmlSource: '<span>ToDo</span>',
						scriptSource: 'js/todo/views/todo/todo.js',
						subscriptions: [
							{
								channel: 'todo',
								topic: 'doneToDo'
							}
						]
					}
				},
				models: {
					individual: {
						someKey: 'someValue',
						scriptSource: 'js/todo/models/individual/individual.js',
						subscriptions: [
							{
								channel: 'todo',
								topic: 'doToDo'
							}
						]
					}
				}
			}
		}
	};
    var _Config = new Base(configs);
    return _Config;
});